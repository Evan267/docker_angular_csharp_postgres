services:
  postgres: 
    container_name: postgres_container
    image: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
      - postgres-test:/data/postgres
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - pgadmin-test:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - postgres
    
  backend:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    container_name: backend_container
    working_dir: /app
    volumes:
      - ../backend/src:/app/src
      - /app/bin
      - /app/obj
    ports:
      - "5000:5000"
    command: dotnet watch run --project /app/src/ApiPhotos.csproj
    networks:
      - app-network

  frontend:
    image: node:20.16.0-alpine3.19
    container_name: frontend_container
    working_dir: /app
    volumes:
      - ../frontend/src:/app/src
      - /app/node_modules
    ports:
      - "4200:4200"
    command: npm run start
    networks:
      - app-network
      


networks:
  postgres:
    driver: bridge
  app-network:
    driver: bridge

volumes:
  postgres-test:
  pgadmin-test: